# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import mptt.fields
import filebrowser.fields
import base_libs.models.fields
import tagging_autocomplete.models


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccessibilityOption',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('creation_date', models.DateTimeField(verbose_name='creation date', editable=False)),
                ('modified_date', models.DateTimeField(verbose_name='modified date', null=True, editable=False)),
                ('slug', models.SlugField(unique=True, max_length=255, verbose_name='Slug for URIs')),
                ('title', models.CharField(verbose_name='Title', max_length=200, null=True, editable=False)),
                ('image', filebrowser.fields.FileBrowseField(max_length=255, verbose_name='Image', blank=True)),
                ('sort_order', models.IntegerField(default=0, verbose_name='Sort Order')),
                ('title_de', models.CharField(max_length=200, verbose_name='Title')),
                ('title_en', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_fr', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_pl', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_tr', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_es', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_it', models.CharField(max_length=200, verbose_name='Title', blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'verbose_name': 'Accessibility option',
                'verbose_name_plural': 'Accessibility options',
            },
        ),
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('creation_date', models.DateTimeField(verbose_name='creation date', editable=False)),
                ('modified_date', models.DateTimeField(verbose_name='modified date', null=True, editable=False)),
                ('path', filebrowser.fields.FileBrowseField(help_text='A path to a locally stored image, video, or audio file.', max_length=255, verbose_name='File path')),
                ('sort_order', base_libs.models.fields.PositionField(default=None, verbose_name='Sort order')),
            ],
            options={
                'ordering': ['sort_order', 'creation_date'],
                'verbose_name': 'Media File',
                'verbose_name_plural': 'Media Files',
            },
        ),
        migrations.CreateModel(
            name='Museum',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('creation_date', models.DateTimeField(verbose_name='creation date', editable=False)),
                ('modified_date', models.DateTimeField(verbose_name='modified date', null=True, editable=False)),
                ('slug', models.SlugField(unique=True, max_length=255, verbose_name='Slug for URIs')),
                ('title', models.CharField(verbose_name='Name', max_length=255, null=True, editable=False)),
                ('subtitle', models.CharField(verbose_name='Subtitle', max_length=255, null=True, editable=False, blank=True)),
                ('description', models.TextField(default=b'', verbose_name='Description', null=True, editable=False, blank=True)),
                ('image', filebrowser.fields.FileBrowseField(verbose_name='Image', max_length=255, editable=False, blank=True)),
                ('image_caption', models.TextField(default=b'', editable=False, max_length=255, blank=True, null=True, verbose_name='Image Caption')),
                ('tags', tagging_autocomplete.models.TagAutocompleteField(default=b'', help_text='Separate different tags by comma', max_length=255, verbose_name='tags', blank=True)),
                ('is_for_children', models.BooleanField(verbose_name='Special for children')),
                ('street_address', models.CharField(max_length=255, verbose_name='Street address')),
                ('street_address2', models.CharField(max_length=255, verbose_name='Street address (second line)', blank=True)),
                ('postal_code', models.CharField(max_length=255, verbose_name='Postal code')),
                ('city', models.CharField(default=b'Berlin', max_length=255, verbose_name='City')),
                ('country', models.CharField(default=b'de', max_length=255, verbose_name='Country', choices=[(b'de', 'Germany'), (b'-', b'Other')])),
                ('latitude', models.FloatField(help_text='Latitude (Lat.) is the angle between any point and the equator (north pole is at 90; south pole is at -90).', null=True, verbose_name='Latitude', blank=True)),
                ('longitude', models.FloatField(help_text='Longitude (Long.) is the angle east or west of an arbitrary point on Earth from Greenwich (UK), which is the international zero-longitude point (longitude=0 degrees). The anti-meridian of Greenwich is both 180 (direction to east) and -180 (direction to west).', null=True, verbose_name='Longitude', blank=True)),
                ('phone_country', models.CharField(default=b'49', max_length=4, verbose_name='Country Code', blank=True)),
                ('phone_area', models.CharField(max_length=6, verbose_name='Area Code', blank=True)),
                ('phone_number', models.CharField(max_length=25, verbose_name='Subscriber Number and Extension', blank=True)),
                ('fax_country', models.CharField(default=b'49', max_length=4, verbose_name='Country Code', blank=True)),
                ('fax_area', models.CharField(max_length=6, verbose_name='Area Code', blank=True)),
                ('fax_number', models.CharField(max_length=25, verbose_name='Subscriber Number and Extension', blank=True)),
                ('email', models.EmailField(max_length=255, verbose_name='Email', blank=True)),
                ('website', base_libs.models.fields.URLField(verbose_name=b'Website', blank=True)),
                ('group_bookings_phone_country', models.CharField(default=b'49', max_length=4, verbose_name='Country Code', blank=True)),
                ('group_bookings_phone_area', models.CharField(max_length=6, verbose_name='Area Code', blank=True)),
                ('group_bookings_phone_number', models.CharField(max_length=25, verbose_name='Subscriber Number and Extension', blank=True)),
                ('service_phone_country', models.CharField(default=b'49', max_length=4, verbose_name='Country Code', blank=True)),
                ('service_phone_area', models.CharField(max_length=6, verbose_name='Area Code', blank=True)),
                ('service_phone_number', models.CharField(max_length=25, verbose_name='Subscriber Number and Extension', blank=True)),
                ('open_on_mondays', models.BooleanField(verbose_name='Open on Mondays')),
                ('free_entrance', models.BooleanField(verbose_name='Free entrance')),
                ('admission_price', models.DecimalField(null=True, verbose_name='Admission price (\u20ac)', max_digits=5, decimal_places=2, blank=True)),
                ('admission_price_info', models.TextField(default=b'', verbose_name='Admission price info', null=True, editable=False, blank=True)),
                ('reduced_price', models.DecimalField(null=True, verbose_name='Reduced admission price (\u20ac)', max_digits=5, decimal_places=2, blank=True)),
                ('reduced_price_info', models.TextField(default=b'', verbose_name='Reduced admission price info', null=True, editable=False, blank=True)),
                ('show_family_ticket', models.BooleanField(verbose_name='Family ticket')),
                ('show_group_ticket', models.BooleanField(verbose_name='Group ticket')),
                ('group_ticket', models.TextField(default=b'', verbose_name='Group ticket', null=True, editable=False, blank=True)),
                ('show_yearly_ticket', models.BooleanField(verbose_name='Yearly ticket')),
                ('member_of_museumspass', models.BooleanField(verbose_name='Museumspass Berlin')),
                ('accessibility', models.TextField(default=b'', verbose_name='Accessibility', null=True, editable=False, blank=True)),
                ('mobidat', models.TextField(default=b'', verbose_name='Mobidat', null=True, editable=False, blank=True)),
                ('service_shop', models.BooleanField(verbose_name='Museum Shop')),
                ('service_restaurant', models.BooleanField(verbose_name='Restaurant')),
                ('service_cafe', models.BooleanField(verbose_name='Cafe')),
                ('service_library', models.BooleanField(verbose_name='Library')),
                ('service_archive', models.BooleanField(verbose_name='Archive')),
                ('service_diaper_changing_table', models.BooleanField(verbose_name='Diaper changing table')),
                ('has_audioguide', models.BooleanField(verbose_name='Audioguide')),
                ('has_audioguide_de', models.BooleanField(verbose_name='German')),
                ('has_audioguide_en', models.BooleanField(verbose_name='English')),
                ('has_audioguide_fr', models.BooleanField(verbose_name='French')),
                ('has_audioguide_it', models.BooleanField(verbose_name='Italian')),
                ('has_audioguide_sp', models.BooleanField(verbose_name='Spanish')),
                ('has_audioguide_pl', models.BooleanField(verbose_name='Polish')),
                ('has_audioguide_tr', models.BooleanField(verbose_name='Turkish')),
                ('audioguide_other_languages', models.CharField(max_length=255, verbose_name='Other languages', blank=True)),
                ('has_audioguide_for_children', models.BooleanField(verbose_name='Audioguide for children')),
                ('has_audioguide_for_learning_difficulties', models.BooleanField(verbose_name='Audioguide for people with learning difficulties')),
                ('participates_in_langenacht', models.BooleanField(default=False, verbose_name='Participates in Lange Nacht')),
                ('participates_in_berlinartweek', models.BooleanField(default=False, verbose_name='Participates in Berlin Art Week')),
                ('participates_in_emop', models.BooleanField(default=False, verbose_name='Participates in EMOP')),
                ('search_keywords', models.TextField(default=b'', verbose_name='Search keywords', null=True, editable=False, blank=True)),
                ('favorites_count', models.PositiveIntegerField(default=0, verbose_name='Favorites count', editable=False)),
                ('status', models.CharField(default=b'draft', max_length=20, verbose_name='Status', blank=True, choices=[(b'draft', 'Draft'), (b'published', 'Published'), (b'not_listed', 'Not Listed'), (b'import', 'Imported'), (b'trashed', 'Trashed')])),
                ('reduced_price_info_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Reduced admission price info', blank=True)),
                ('reduced_price_info_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('reduced_price_info_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Reduced admission price info', blank=True)),
                ('reduced_price_info_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('reduced_price_info_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Reduced admission price info', blank=True)),
                ('reduced_price_info_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('reduced_price_info_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Reduced admission price info', blank=True)),
                ('reduced_price_info_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('reduced_price_info_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Reduced admission price info', blank=True)),
                ('reduced_price_info_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('reduced_price_info_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Reduced admission price info', blank=True)),
                ('reduced_price_info_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('reduced_price_info_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Reduced admission price info', blank=True)),
                ('reduced_price_info_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('group_ticket_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Group ticket', blank=True)),
                ('group_ticket_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('group_ticket_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Group ticket', blank=True)),
                ('group_ticket_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('group_ticket_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Group ticket', blank=True)),
                ('group_ticket_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('group_ticket_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Group ticket', blank=True)),
                ('group_ticket_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('group_ticket_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Group ticket', blank=True)),
                ('group_ticket_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('group_ticket_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Group ticket', blank=True)),
                ('group_ticket_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('group_ticket_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Group ticket', blank=True)),
                ('group_ticket_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('title_de', models.CharField(max_length=255, verbose_name='Name')),
                ('title_en', models.CharField(max_length=255, verbose_name='Name', blank=True)),
                ('title_fr', models.CharField(max_length=255, verbose_name='Name', blank=True)),
                ('title_pl', models.CharField(max_length=255, verbose_name='Name', blank=True)),
                ('title_tr', models.CharField(max_length=255, verbose_name='Name', blank=True)),
                ('title_es', models.CharField(max_length=255, verbose_name='Name', blank=True)),
                ('title_it', models.CharField(max_length=255, verbose_name='Name', blank=True)),
                ('search_keywords_de', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_en', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_fr', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_pl', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_tr', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_es', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_it', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('description_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('subtitle_de', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_en', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_fr', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_pl', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_tr', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_es', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_it', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('accessibility_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Accessibility', blank=True)),
                ('accessibility_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('accessibility_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Accessibility', blank=True)),
                ('accessibility_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('accessibility_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Accessibility', blank=True)),
                ('accessibility_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('accessibility_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Accessibility', blank=True)),
                ('accessibility_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('accessibility_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Accessibility', blank=True)),
                ('accessibility_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('accessibility_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Accessibility', blank=True)),
                ('accessibility_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('accessibility_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Accessibility', blank=True)),
                ('accessibility_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('image_caption_de', base_libs.models.fields.ExtendedTextField(default=b'', editable=False, max_length=255, blank=True, null=True, verbose_name='Image Caption')),
                ('image_caption_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('image_caption_en', base_libs.models.fields.ExtendedTextField(default=b'', editable=False, max_length=255, blank=True, null=True, verbose_name='Image Caption')),
                ('image_caption_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('image_caption_fr', base_libs.models.fields.ExtendedTextField(default=b'', editable=False, max_length=255, blank=True, null=True, verbose_name='Image Caption')),
                ('image_caption_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('image_caption_pl', base_libs.models.fields.ExtendedTextField(default=b'', editable=False, max_length=255, blank=True, null=True, verbose_name='Image Caption')),
                ('image_caption_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('image_caption_tr', base_libs.models.fields.ExtendedTextField(default=b'', editable=False, max_length=255, blank=True, null=True, verbose_name='Image Caption')),
                ('image_caption_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('image_caption_es', base_libs.models.fields.ExtendedTextField(default=b'', editable=False, max_length=255, blank=True, null=True, verbose_name='Image Caption')),
                ('image_caption_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('image_caption_it', base_libs.models.fields.ExtendedTextField(default=b'', editable=False, max_length=255, blank=True, null=True, verbose_name='Image Caption')),
                ('image_caption_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('mobidat_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Mobidat', blank=True)),
                ('mobidat_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('mobidat_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Mobidat', blank=True)),
                ('mobidat_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('mobidat_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Mobidat', blank=True)),
                ('mobidat_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('mobidat_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Mobidat', blank=True)),
                ('mobidat_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('mobidat_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Mobidat', blank=True)),
                ('mobidat_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('mobidat_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Mobidat', blank=True)),
                ('mobidat_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('mobidat_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Mobidat', blank=True)),
                ('mobidat_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('accessibility_options', models.ManyToManyField(to='museums.AccessibilityOption', verbose_name='Accessibility options', blank=True)),
            ],
            options={
                'ordering': ['title'],
                'verbose_name': 'Museum',
                'verbose_name_plural': 'Museums',
            },
        ),
        migrations.CreateModel(
            name='MuseumCategory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('creation_date', models.DateTimeField(verbose_name='creation date', editable=False)),
                ('modified_date', models.DateTimeField(verbose_name='modified date', null=True, editable=False)),
                ('slug', models.SlugField(unique=True, max_length=255, verbose_name='Slug for URIs')),
                ('title', models.CharField(verbose_name='Title', max_length=200, null=True, editable=False)),
                ('title_de', models.CharField(max_length=200, verbose_name='Title')),
                ('title_en', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_fr', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_pl', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_tr', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_es', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_it', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('lft', models.PositiveIntegerField(editable=False, db_index=True)),
                ('rght', models.PositiveIntegerField(editable=False, db_index=True)),
                ('tree_id', models.PositiveIntegerField(editable=False, db_index=True)),
                ('level', models.PositiveIntegerField(editable=False, db_index=True)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, to='museums.MuseumCategory', null=True)),
            ],
            options={
                'ordering': ['tree_id', 'lft'],
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('is_appointment_based', models.BooleanField(default=False, verbose_name='Visiting by Appointment')),
                ('mon_open', models.TimeField(null=True, verbose_name='Opens on Monday', blank=True)),
                ('mon_break_close', models.TimeField(null=True, verbose_name='Break Starts on Monday', blank=True)),
                ('mon_break_open', models.TimeField(null=True, verbose_name='Break Ends on Monday', blank=True)),
                ('mon_close', models.TimeField(null=True, verbose_name='Closes on Monday', blank=True)),
                ('tue_open', models.TimeField(null=True, verbose_name='Opens on Tuesday', blank=True)),
                ('tue_break_close', models.TimeField(null=True, verbose_name='Break Starts on Tuesday', blank=True)),
                ('tue_break_open', models.TimeField(null=True, verbose_name='Break Ends on Tuesday', blank=True)),
                ('tue_close', models.TimeField(null=True, verbose_name='Closes on Tuesday', blank=True)),
                ('wed_open', models.TimeField(null=True, verbose_name='Opens on Wednesday', blank=True)),
                ('wed_break_close', models.TimeField(null=True, verbose_name='Break Starts on Wednesday', blank=True)),
                ('wed_break_open', models.TimeField(null=True, verbose_name='Break Ends on Wednesday', blank=True)),
                ('wed_close', models.TimeField(null=True, verbose_name='Closes on Wednesday', blank=True)),
                ('thu_open', models.TimeField(null=True, verbose_name='Opens on Thursday', blank=True)),
                ('thu_break_close', models.TimeField(null=True, verbose_name='Break Starts on Thursday', blank=True)),
                ('thu_break_open', models.TimeField(null=True, verbose_name='Break Ends on Thursday', blank=True)),
                ('thu_close', models.TimeField(null=True, verbose_name='Closes on Thursday', blank=True)),
                ('fri_open', models.TimeField(null=True, verbose_name='Opens on Friday', blank=True)),
                ('fri_break_close', models.TimeField(null=True, verbose_name='Break Starts on Friday', blank=True)),
                ('fri_break_open', models.TimeField(null=True, verbose_name='Break Ends on Friday', blank=True)),
                ('fri_close', models.TimeField(null=True, verbose_name='Closes on Friday', blank=True)),
                ('sat_open', models.TimeField(null=True, verbose_name='Opens on Saturday', blank=True)),
                ('sat_break_close', models.TimeField(null=True, verbose_name='Break Starts on Saturday', blank=True)),
                ('sat_break_open', models.TimeField(null=True, verbose_name='Break Ends on Saturday', blank=True)),
                ('sat_close', models.TimeField(null=True, verbose_name='Closes on Saturday', blank=True)),
                ('sun_open', models.TimeField(null=True, verbose_name='Opens on Sunday', blank=True)),
                ('sun_break_close', models.TimeField(null=True, verbose_name='Break Starts on Sunday', blank=True)),
                ('sun_break_open', models.TimeField(null=True, verbose_name='Break Ends on Sunday', blank=True)),
                ('sun_close', models.TimeField(null=True, verbose_name='Closes on Sunday', blank=True)),
                ('exceptions', models.TextField(default=b'', verbose_name='Exceptions for working hours', null=True, editable=False, blank=True)),
                ('title', models.CharField(verbose_name='Season title', max_length=255, null=True, editable=False)),
                ('start', models.DateField(verbose_name='Start')),
                ('end', models.DateField(verbose_name='End')),
                ('last_entry', models.CharField(verbose_name='Last entry', max_length=255, null=True, editable=False, blank=True)),
                ('title_de', models.CharField(max_length=255, verbose_name='Season title')),
                ('title_en', models.CharField(max_length=255, verbose_name='Season title', blank=True)),
                ('title_fr', models.CharField(max_length=255, verbose_name='Season title', blank=True)),
                ('title_pl', models.CharField(max_length=255, verbose_name='Season title', blank=True)),
                ('title_tr', models.CharField(max_length=255, verbose_name='Season title', blank=True)),
                ('title_es', models.CharField(max_length=255, verbose_name='Season title', blank=True)),
                ('title_it', models.CharField(max_length=255, verbose_name='Season title', blank=True)),
                ('last_entry_de', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_en', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_fr', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_pl', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_tr', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_es', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_it', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('exceptions_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('museum', models.ForeignKey(to='museums.Museum')),
            ],
            options={
                'ordering': ('start',),
                'verbose_name': 'Season',
                'verbose_name_plural': 'Seasons',
            },
        ),
        migrations.CreateModel(
            name='SocialMediaChannel',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('channel_type', models.CharField(help_text='e.g. twitter, facebook, etc.', max_length=255, verbose_name='Social media type')),
                ('url', base_libs.models.fields.URLField(max_length=255, verbose_name='URL')),
                ('museum', models.ForeignKey(to='museums.Museum')),
            ],
            options={
                'ordering': ['channel_type'],
                'verbose_name': 'Social media channel',
                'verbose_name_plural': 'Social media channels',
            },
        ),
        migrations.CreateModel(
            name='SpecialOpeningTime',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('yyyy', models.PositiveIntegerField(blank=True, help_text='Leave this field empty, if the occasion happens every year at the same time.', null=True, verbose_name='Year', choices=[(2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022)])),
                ('mm', models.PositiveIntegerField(verbose_name='Month', choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')])),
                ('dd', models.PositiveIntegerField(verbose_name='Day', choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31)])),
                ('day_label', models.CharField(editable=False, max_length=255, blank=True, help_text='e.g. Christmas, Easter, etc.', null=True, verbose_name='Day label')),
                ('is_closed', models.BooleanField(verbose_name='Closed')),
                ('is_regular', models.BooleanField(verbose_name='Regular Opening hours')),
                ('opening', models.TimeField(null=True, verbose_name='Opens', blank=True)),
                ('break_close', models.TimeField(null=True, verbose_name='Break Starts', blank=True)),
                ('break_open', models.TimeField(null=True, verbose_name='Break Ends', blank=True)),
                ('closing', models.TimeField(null=True, verbose_name='Closes', blank=True)),
                ('exceptions', models.TextField(default=b'', verbose_name='Exceptions for working hours', null=True, editable=False, blank=True)),
                ('day_label_de', models.CharField(help_text='e.g. Christmas, Easter, etc.', max_length=255, verbose_name='Day label', blank=True)),
                ('day_label_en', models.CharField(help_text='e.g. Christmas, Easter, etc.', max_length=255, verbose_name='Day label', blank=True)),
                ('day_label_fr', models.CharField(help_text='e.g. Christmas, Easter, etc.', max_length=255, verbose_name='Day label', blank=True)),
                ('day_label_pl', models.CharField(help_text='e.g. Christmas, Easter, etc.', max_length=255, verbose_name='Day label', blank=True)),
                ('day_label_tr', models.CharField(help_text='e.g. Christmas, Easter, etc.', max_length=255, verbose_name='Day label', blank=True)),
                ('day_label_es', models.CharField(help_text='e.g. Christmas, Easter, etc.', max_length=255, verbose_name='Day label', blank=True)),
                ('day_label_it', models.CharField(help_text='e.g. Christmas, Easter, etc.', max_length=255, verbose_name='Day label', blank=True)),
                ('exceptions_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('museum', models.ForeignKey(to='museums.Museum')),
            ],
            options={
                'ordering': ('yyyy', 'mm', 'dd'),
                'verbose_name': 'Special opening time',
                'verbose_name_plural': 'Special Opening hours',
            },
        ),
        migrations.AddField(
            model_name='museum',
            name='categories',
            field=mptt.fields.TreeManyToManyField(to='museums.MuseumCategory', verbose_name='Categories'),
        ),
        migrations.AddField(
            model_name='museum',
            name='parent',
            field=models.ForeignKey(verbose_name='Parent museum', blank=True, to='museums.Museum', null=True),
        ),
        migrations.AddField(
            model_name='mediafile',
            name='museum',
            field=models.ForeignKey(verbose_name='Museum', to='museums.Museum'),
        ),
    ]
