# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import mptt.fields
import filebrowser.fields
import base_libs.models.fields
import tagging_autocomplete.models


class Migration(migrations.Migration):

    dependencies = [
        ('cms', '0016_auto_20160608_1535'),
        ('museums', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exhibition',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('creation_date', models.DateTimeField(verbose_name='creation date', editable=False)),
                ('modified_date', models.DateTimeField(verbose_name='modified date', null=True, editable=False)),
                ('slug', models.SlugField(unique=True, max_length=255, verbose_name='Slug for URIs')),
                ('title', models.CharField(verbose_name='Title', max_length=255, null=True, editable=False)),
                ('subtitle', models.CharField(verbose_name='Subtitle', max_length=255, null=True, editable=False, blank=True)),
                ('teaser', models.TextField(default=b'', verbose_name='Teaser', null=True, editable=False, blank=True)),
                ('description', models.TextField(default=b'', verbose_name='Description', null=True, editable=False, blank=True)),
                ('press_text', models.TextField(default=b'', verbose_name='Press text', null=True, editable=False, blank=True)),
                ('website', models.CharField(verbose_name='Website', max_length=255, null=True, editable=False, blank=True)),
                ('catalog', models.TextField(default=b'', verbose_name='Catalog', null=True, editable=False, blank=True)),
                ('catalog_ordering', models.CharField(verbose_name='Catalog ordering possibilities', max_length=255, null=True, editable=False, blank=True)),
                ('description_locked', models.BooleanField(help_text="When checked, press text won't be copied automatically to description.", verbose_name='Description locked')),
                ('start', models.DateField(null=True, verbose_name='Start', blank=True)),
                ('end', models.DateField(null=True, verbose_name='End', blank=True)),
                ('vernissage', models.DateTimeField(null=True, verbose_name='Vernissage', blank=True)),
                ('finissage', models.DateTimeField(null=True, verbose_name='Finissage', blank=True)),
                ('exhibition_extended', models.BooleanField(verbose_name='Exhibition extended')),
                ('permanent', models.BooleanField(verbose_name='Permanent exhibition')),
                ('special', models.BooleanField(verbose_name='Special exhibition')),
                ('image', filebrowser.fields.FileBrowseField(verbose_name='Image', max_length=255, editable=False, blank=True)),
                ('image_caption', models.TextField(default=b'', editable=False, max_length=255, blank=True, null=True, verbose_name='Image Caption')),
                ('pdf_document_de', filebrowser.fields.FileBrowseField(max_length=255, verbose_name='PDF Document in German', blank=True)),
                ('pdf_document_en', filebrowser.fields.FileBrowseField(max_length=255, verbose_name='PDF Document in English', blank=True)),
                ('location_name', models.CharField(max_length=255, verbose_name='Location name', blank=True)),
                ('street_address', models.CharField(max_length=255, verbose_name='Street address', blank=True)),
                ('street_address2', models.CharField(max_length=255, verbose_name='Street address (second line)', blank=True)),
                ('postal_code', models.CharField(max_length=255, verbose_name='Postal code', blank=True)),
                ('city', models.CharField(default=b'Berlin', max_length=255, verbose_name='City', blank=True)),
                ('country', models.CharField(default=b'de', max_length=255, verbose_name='Country', blank=True, choices=[(b'de', 'Germany'), (b'-', b'Other')])),
                ('latitude', models.FloatField(help_text='Latitude (Lat.) is the angle between any point and the equator (north pole is at 90; south pole is at -90).', null=True, verbose_name='Latitude', blank=True)),
                ('longitude', models.FloatField(help_text='Longitude (Long.) is the angle east or west of an arbitrary point on Earth from Greenwich (UK), which is the international zero-longitude point (longitude=0 degrees). The anti-meridian of Greenwich is both 180 (direction to east) and -180 (direction to west).', null=True, verbose_name='Longitude', blank=True)),
                ('other_locations', models.TextField(default=b'', verbose_name='Other exhibition locations', null=True, editable=False, blank=True)),
                ('newly_opened', models.BooleanField(verbose_name='Newly opened')),
                ('featured', models.BooleanField(verbose_name='Featured in Newsletter')),
                ('featured_in_magazine', models.BooleanField(verbose_name='Featured in Magazine')),
                ('closing_soon', models.BooleanField(verbose_name='Closing soon')),
                ('museum_prices', models.BooleanField(verbose_name='See prices from museum')),
                ('free_entrance', models.BooleanField(verbose_name='Free entrance')),
                ('admission_price', models.DecimalField(null=True, verbose_name='Admission price (\u20ac)', max_digits=5, decimal_places=2, blank=True)),
                ('admission_price_info', models.TextField(default=b'', verbose_name='Admission price info', null=True, editable=False, blank=True)),
                ('reduced_price', models.DecimalField(null=True, verbose_name='Reduced admission price (\u20ac)', max_digits=5, decimal_places=2, blank=True)),
                ('reduced_price_info', models.TextField(default=b'', verbose_name='Reduced admission price info', null=True, editable=False, blank=True)),
                ('shop_link', models.CharField(editable=False, max_length=255, blank=True, help_text='A link to an external ticket shop', null=True, verbose_name='Buy ticket')),
                ('museum_opening_hours', models.BooleanField(verbose_name='See opening hours from museum')),
                ('suitable_for_disabled', models.BooleanField(verbose_name='Exhibition suitable for people with disabilities')),
                ('suitable_for_disabled_info', models.TextField(default=b'', verbose_name='Suitability for people with disabilities info', null=True, editable=False, blank=True)),
                ('tags', tagging_autocomplete.models.TagAutocompleteField(default=b'', help_text='Separate different tags by comma', max_length=255, verbose_name='tags', blank=True)),
                ('status', models.CharField(default=b'draft', max_length=20, verbose_name='Status', blank=True, choices=[(b'draft', 'Draft'), (b'published', 'Published'), (b'not_listed', 'Not Listed'), (b'expired', 'Expired'), (b'import', 'Imported'), (b'trashed', 'Trashed')])),
                ('is_for_children', models.BooleanField(verbose_name='Special for children / families / youth')),
                ('search_keywords', models.TextField(default=b'', verbose_name='Search keywords', null=True, editable=False, blank=True)),
                ('favorites_count', models.PositiveIntegerField(default=0, verbose_name='Favorites count', editable=False)),
                ('subtitle_de', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_en', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_fr', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_pl', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_tr', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_es', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_it', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('reduced_price_info_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Reduced admission price info', blank=True)),
                ('reduced_price_info_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('reduced_price_info_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Reduced admission price info', blank=True)),
                ('reduced_price_info_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('reduced_price_info_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Reduced admission price info', blank=True)),
                ('reduced_price_info_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('reduced_price_info_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Reduced admission price info', blank=True)),
                ('reduced_price_info_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('reduced_price_info_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Reduced admission price info', blank=True)),
                ('reduced_price_info_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('reduced_price_info_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Reduced admission price info', blank=True)),
                ('reduced_price_info_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('reduced_price_info_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Reduced admission price info', blank=True)),
                ('reduced_price_info_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('suitable_for_disabled_info_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Suitability for people with disabilities info', blank=True)),
                ('suitable_for_disabled_info_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('suitable_for_disabled_info_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Suitability for people with disabilities info', blank=True)),
                ('suitable_for_disabled_info_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('suitable_for_disabled_info_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Suitability for people with disabilities info', blank=True)),
                ('suitable_for_disabled_info_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('suitable_for_disabled_info_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Suitability for people with disabilities info', blank=True)),
                ('suitable_for_disabled_info_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('suitable_for_disabled_info_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Suitability for people with disabilities info', blank=True)),
                ('suitable_for_disabled_info_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('suitable_for_disabled_info_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Suitability for people with disabilities info', blank=True)),
                ('suitable_for_disabled_info_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('suitable_for_disabled_info_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Suitability for people with disabilities info', blank=True)),
                ('suitable_for_disabled_info_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('catalog_ordering_de', models.CharField(max_length=255, verbose_name='Catalog ordering possibilities', blank=True)),
                ('catalog_ordering_en', models.CharField(max_length=255, verbose_name='Catalog ordering possibilities', blank=True)),
                ('catalog_ordering_fr', models.CharField(max_length=255, verbose_name='Catalog ordering possibilities', blank=True)),
                ('catalog_ordering_pl', models.CharField(max_length=255, verbose_name='Catalog ordering possibilities', blank=True)),
                ('catalog_ordering_tr', models.CharField(max_length=255, verbose_name='Catalog ordering possibilities', blank=True)),
                ('catalog_ordering_es', models.CharField(max_length=255, verbose_name='Catalog ordering possibilities', blank=True)),
                ('catalog_ordering_it', models.CharField(max_length=255, verbose_name='Catalog ordering possibilities', blank=True)),
                ('search_keywords_de', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_en', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_fr', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_pl', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_tr', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_es', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_it', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('image_caption_de', base_libs.models.fields.ExtendedTextField(default=b'', editable=False, max_length=255, blank=True, null=True, verbose_name='Image Caption')),
                ('image_caption_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('image_caption_en', base_libs.models.fields.ExtendedTextField(default=b'', editable=False, max_length=255, blank=True, null=True, verbose_name='Image Caption')),
                ('image_caption_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('image_caption_fr', base_libs.models.fields.ExtendedTextField(default=b'', editable=False, max_length=255, blank=True, null=True, verbose_name='Image Caption')),
                ('image_caption_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('image_caption_pl', base_libs.models.fields.ExtendedTextField(default=b'', editable=False, max_length=255, blank=True, null=True, verbose_name='Image Caption')),
                ('image_caption_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('image_caption_tr', base_libs.models.fields.ExtendedTextField(default=b'', editable=False, max_length=255, blank=True, null=True, verbose_name='Image Caption')),
                ('image_caption_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('image_caption_es', base_libs.models.fields.ExtendedTextField(default=b'', editable=False, max_length=255, blank=True, null=True, verbose_name='Image Caption')),
                ('image_caption_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('image_caption_it', base_libs.models.fields.ExtendedTextField(default=b'', editable=False, max_length=255, blank=True, null=True, verbose_name='Image Caption')),
                ('image_caption_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('shop_link_de', models.CharField(help_text='A link to an external ticket shop', max_length=255, verbose_name='Buy ticket', blank=True)),
                ('shop_link_en', models.CharField(help_text='A link to an external ticket shop', max_length=255, verbose_name='Buy ticket', blank=True)),
                ('shop_link_fr', models.CharField(help_text='A link to an external ticket shop', max_length=255, verbose_name='Buy ticket', blank=True)),
                ('shop_link_pl', models.CharField(help_text='A link to an external ticket shop', max_length=255, verbose_name='Buy ticket', blank=True)),
                ('shop_link_tr', models.CharField(help_text='A link to an external ticket shop', max_length=255, verbose_name='Buy ticket', blank=True)),
                ('shop_link_es', models.CharField(help_text='A link to an external ticket shop', max_length=255, verbose_name='Buy ticket', blank=True)),
                ('shop_link_it', models.CharField(help_text='A link to an external ticket shop', max_length=255, verbose_name='Buy ticket', blank=True)),
                ('title_de', models.CharField(max_length=255, verbose_name='Title')),
                ('title_en', models.CharField(max_length=255, verbose_name='Title', blank=True)),
                ('title_fr', models.CharField(max_length=255, verbose_name='Title', blank=True)),
                ('title_pl', models.CharField(max_length=255, verbose_name='Title', blank=True)),
                ('title_tr', models.CharField(max_length=255, verbose_name='Title', blank=True)),
                ('title_es', models.CharField(max_length=255, verbose_name='Title', blank=True)),
                ('title_it', models.CharField(max_length=255, verbose_name='Title', blank=True)),
                ('press_text_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Press text', blank=True)),
                ('press_text_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('press_text_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Press text', blank=True)),
                ('press_text_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('press_text_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Press text', blank=True)),
                ('press_text_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('press_text_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Press text', blank=True)),
                ('press_text_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('press_text_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Press text', blank=True)),
                ('press_text_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('press_text_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Press text', blank=True)),
                ('press_text_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('press_text_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Press text', blank=True)),
                ('press_text_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('website_de', models.CharField(max_length=255, verbose_name='Website', blank=True)),
                ('website_en', models.CharField(max_length=255, verbose_name='Website', blank=True)),
                ('website_fr', models.CharField(max_length=255, verbose_name='Website', blank=True)),
                ('website_pl', models.CharField(max_length=255, verbose_name='Website', blank=True)),
                ('website_tr', models.CharField(max_length=255, verbose_name='Website', blank=True)),
                ('website_es', models.CharField(max_length=255, verbose_name='Website', blank=True)),
                ('website_it', models.CharField(max_length=255, verbose_name='Website', blank=True)),
                ('description_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('catalog_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Catalog', blank=True)),
                ('catalog_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('catalog_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Catalog', blank=True)),
                ('catalog_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('catalog_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Catalog', blank=True)),
                ('catalog_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('catalog_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Catalog', blank=True)),
                ('catalog_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('catalog_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Catalog', blank=True)),
                ('catalog_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('catalog_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Catalog', blank=True)),
                ('catalog_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('catalog_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Catalog', blank=True)),
                ('catalog_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('other_locations_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Other exhibition locations', blank=True)),
                ('other_locations_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('other_locations_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Other exhibition locations', blank=True)),
                ('other_locations_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('other_locations_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Other exhibition locations', blank=True)),
                ('other_locations_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('other_locations_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Other exhibition locations', blank=True)),
                ('other_locations_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('other_locations_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Other exhibition locations', blank=True)),
                ('other_locations_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('other_locations_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Other exhibition locations', blank=True)),
                ('other_locations_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('other_locations_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Other exhibition locations', blank=True)),
                ('other_locations_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('teaser_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Teaser', blank=True)),
                ('teaser_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('teaser_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Teaser', blank=True)),
                ('teaser_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('teaser_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Teaser', blank=True)),
                ('teaser_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('teaser_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Teaser', blank=True)),
                ('teaser_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('teaser_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Teaser', blank=True)),
                ('teaser_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('teaser_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Teaser', blank=True)),
                ('teaser_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('teaser_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Teaser', blank=True)),
                ('teaser_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
            ],
            options={
                'ordering': ['title'],
                'verbose_name': 'Exhibition',
                'verbose_name_plural': 'Exhibitions',
            },
        ),
        migrations.CreateModel(
            name='ExhibitionCategory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('creation_date', models.DateTimeField(verbose_name='creation date', editable=False)),
                ('modified_date', models.DateTimeField(verbose_name='modified date', null=True, editable=False)),
                ('slug', models.SlugField(unique=True, max_length=255, verbose_name='Slug for URIs')),
                ('title', models.CharField(verbose_name='Title', max_length=200, null=True, editable=False)),
                ('title_de', models.CharField(max_length=200, verbose_name='Title')),
                ('title_en', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_fr', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_pl', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_tr', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_es', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_it', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('lft', models.PositiveIntegerField(editable=False, db_index=True)),
                ('rght', models.PositiveIntegerField(editable=False, db_index=True)),
                ('tree_id', models.PositiveIntegerField(editable=False, db_index=True)),
                ('level', models.PositiveIntegerField(editable=False, db_index=True)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, to='exhibitions.ExhibitionCategory', null=True)),
            ],
            options={
                'ordering': ['tree_id', 'lft'],
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('creation_date', models.DateTimeField(verbose_name='creation date', editable=False)),
                ('modified_date', models.DateTimeField(verbose_name='modified date', null=True, editable=False)),
                ('path', filebrowser.fields.FileBrowseField(help_text='A path to a locally stored image, video, or audio file.', max_length=500, verbose_name='File path')),
                ('sort_order', base_libs.models.fields.PositionField(default=None, verbose_name='Sort order')),
                ('exhibition', models.ForeignKey(verbose_name='Exhibition', to='exhibitions.Exhibition')),
            ],
            options={
                'ordering': ['sort_order', 'creation_date'],
                'verbose_name': 'Media File',
                'verbose_name_plural': 'Media Files',
            },
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('organizer_title', models.CharField(max_length=255, verbose_name='Other Organizer', blank=True)),
                ('organizer_url_link', base_libs.models.fields.URLField(verbose_name='Organizer URL', blank=True)),
                ('exhibition', models.ForeignKey(to='exhibitions.Exhibition')),
                ('organizing_museum', models.ForeignKey(related_name='exhibition_organizer', verbose_name='Organizing museum', blank=True, to='museums.Museum', null=True)),
            ],
            options={
                'ordering': ('organizing_museum__title', 'organizer_title'),
                'verbose_name': 'Organizer',
                'verbose_name_plural': 'Organizers',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('is_appointment_based', models.BooleanField(default=False, verbose_name='Visiting by Appointment')),
                ('mon_open', models.TimeField(null=True, verbose_name='Opens on Monday', blank=True)),
                ('mon_break_close', models.TimeField(null=True, verbose_name='Break Starts on Monday', blank=True)),
                ('mon_break_open', models.TimeField(null=True, verbose_name='Break Ends on Monday', blank=True)),
                ('mon_close', models.TimeField(null=True, verbose_name='Closes on Monday', blank=True)),
                ('tue_open', models.TimeField(null=True, verbose_name='Opens on Tuesday', blank=True)),
                ('tue_break_close', models.TimeField(null=True, verbose_name='Break Starts on Tuesday', blank=True)),
                ('tue_break_open', models.TimeField(null=True, verbose_name='Break Ends on Tuesday', blank=True)),
                ('tue_close', models.TimeField(null=True, verbose_name='Closes on Tuesday', blank=True)),
                ('wed_open', models.TimeField(null=True, verbose_name='Opens on Wednesday', blank=True)),
                ('wed_break_close', models.TimeField(null=True, verbose_name='Break Starts on Wednesday', blank=True)),
                ('wed_break_open', models.TimeField(null=True, verbose_name='Break Ends on Wednesday', blank=True)),
                ('wed_close', models.TimeField(null=True, verbose_name='Closes on Wednesday', blank=True)),
                ('thu_open', models.TimeField(null=True, verbose_name='Opens on Thursday', blank=True)),
                ('thu_break_close', models.TimeField(null=True, verbose_name='Break Starts on Thursday', blank=True)),
                ('thu_break_open', models.TimeField(null=True, verbose_name='Break Ends on Thursday', blank=True)),
                ('thu_close', models.TimeField(null=True, verbose_name='Closes on Thursday', blank=True)),
                ('fri_open', models.TimeField(null=True, verbose_name='Opens on Friday', blank=True)),
                ('fri_break_close', models.TimeField(null=True, verbose_name='Break Starts on Friday', blank=True)),
                ('fri_break_open', models.TimeField(null=True, verbose_name='Break Ends on Friday', blank=True)),
                ('fri_close', models.TimeField(null=True, verbose_name='Closes on Friday', blank=True)),
                ('sat_open', models.TimeField(null=True, verbose_name='Opens on Saturday', blank=True)),
                ('sat_break_close', models.TimeField(null=True, verbose_name='Break Starts on Saturday', blank=True)),
                ('sat_break_open', models.TimeField(null=True, verbose_name='Break Ends on Saturday', blank=True)),
                ('sat_close', models.TimeField(null=True, verbose_name='Closes on Saturday', blank=True)),
                ('sun_open', models.TimeField(null=True, verbose_name='Opens on Sunday', blank=True)),
                ('sun_break_close', models.TimeField(null=True, verbose_name='Break Starts on Sunday', blank=True)),
                ('sun_break_open', models.TimeField(null=True, verbose_name='Break Ends on Sunday', blank=True)),
                ('sun_close', models.TimeField(null=True, verbose_name='Closes on Sunday', blank=True)),
                ('exceptions', models.TextField(default=b'', verbose_name='Exceptions for working hours', null=True, editable=False, blank=True)),
                ('last_entry', models.CharField(verbose_name='Last entry', max_length=255, null=True, editable=False, blank=True)),
                ('is_open_24_7', models.BooleanField(verbose_name='Open 24/7')),
                ('last_entry_de', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_en', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_fr', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_pl', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_tr', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_es', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_it', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('exceptions_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exhibition', models.ForeignKey(to='exhibitions.Exhibition')),
            ],
            options={
                'verbose_name': 'Season',
                'verbose_name_plural': 'Seasons',
            },
        ),
        migrations.AddField(
            model_name='exhibition',
            name='categories',
            field=mptt.fields.TreeManyToManyField(to='exhibitions.ExhibitionCategory', verbose_name='Categories', blank=True),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='museum',
            field=models.ForeignKey(verbose_name='Museum', blank=True, to='museums.Museum', null=True),
        ),
    ]
