# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import base_libs.models.fields
import filebrowser.fields


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('creation_date', models.DateTimeField(verbose_name='creation date', editable=False)),
                ('modified_date', models.DateTimeField(verbose_name='modified date', null=True, editable=False)),
                ('slug', models.SlugField(unique=True, max_length=255, verbose_name='Slug for URIs')),
                ('title', models.CharField(verbose_name='Name', max_length=255, null=True, editable=False)),
                ('subtitle', models.CharField(verbose_name='Subtitle', max_length=255, null=True, editable=False, blank=True)),
                ('description', models.TextField(default=b'', verbose_name='Description', null=True, editable=False, blank=True)),
                ('cover_image', filebrowser.fields.FileBrowseField(max_length=255, verbose_name='Image', blank=True)),
                ('street_address', models.CharField(max_length=255, verbose_name='Street address')),
                ('street_address2', models.CharField(max_length=255, verbose_name='Street address (second line)', blank=True)),
                ('postal_code', models.CharField(max_length=255, verbose_name='Postal code')),
                ('city', models.CharField(default=b'Berlin', max_length=255, verbose_name='City')),
                ('country', models.CharField(default=b'de', max_length=255, verbose_name='Country', choices=[(b'de', 'Germany'), (b'-', b'Other')])),
                ('latitude', models.FloatField(help_text='Latitude (Lat.) is the angle between any point and the equator (north pole is at 90; south pole is at -90).', null=True, verbose_name='Latitude', blank=True)),
                ('longitude', models.FloatField(help_text='Longitude (Long.) is the angle east or west of an arbitrary point on Earth from Greenwich (UK), which is the international zero-longitude point (longitude=0 degrees). The anti-meridian of Greenwich is both 180 (direction to east) and -180 (direction to west).', null=True, verbose_name='Longitude', blank=True)),
                ('link_url', models.CharField(editable=False, max_length=255, blank=True, help_text='e.g.: /de/museen/akademie-der-kunste-pariser-platz/', null=True, verbose_name='Link URL')),
                ('status', models.CharField(default=b'draft', max_length=20, verbose_name='Status', blank=True, choices=[(b'draft', 'Draft'), (b'published', 'Published'), (b'not_listed', 'Not Listed'), (b'import', 'Imported'), (b'trashed', 'Trashed')])),
                ('subtitle_de', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_en', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_fr', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_pl', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_tr', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_es', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_it', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('title_de', models.CharField(max_length=255, verbose_name='Name')),
                ('title_en', models.CharField(max_length=255, verbose_name='Name', blank=True)),
                ('title_fr', models.CharField(max_length=255, verbose_name='Name', blank=True)),
                ('title_pl', models.CharField(max_length=255, verbose_name='Name', blank=True)),
                ('title_tr', models.CharField(max_length=255, verbose_name='Name', blank=True)),
                ('title_es', models.CharField(max_length=255, verbose_name='Name', blank=True)),
                ('title_it', models.CharField(max_length=255, verbose_name='Name', blank=True)),
                ('description_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('link_url_de', models.CharField(help_text='e.g.: /de/museen/akademie-der-kunste-pariser-platz/', max_length=255, verbose_name='Link URL', blank=True)),
                ('link_url_en', models.CharField(help_text='e.g.: /de/museen/akademie-der-kunste-pariser-platz/', max_length=255, verbose_name='Link URL', blank=True)),
                ('link_url_fr', models.CharField(help_text='e.g.: /de/museen/akademie-der-kunste-pariser-platz/', max_length=255, verbose_name='Link URL', blank=True)),
                ('link_url_pl', models.CharField(help_text='e.g.: /de/museen/akademie-der-kunste-pariser-platz/', max_length=255, verbose_name='Link URL', blank=True)),
                ('link_url_tr', models.CharField(help_text='e.g.: /de/museen/akademie-der-kunste-pariser-platz/', max_length=255, verbose_name='Link URL', blank=True)),
                ('link_url_es', models.CharField(help_text='e.g.: /de/museen/akademie-der-kunste-pariser-platz/', max_length=255, verbose_name='Link URL', blank=True)),
                ('link_url_it', models.CharField(help_text='e.g.: /de/museen/akademie-der-kunste-pariser-platz/', max_length=255, verbose_name='Link URL', blank=True)),
            ],
            options={
                'ordering': ['title'],
                'verbose_name': 'Museum Summer Location',
                'verbose_name_plural': 'Museum Summer Locations',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('is_appointment_based', models.BooleanField(default=False, verbose_name='Visiting by Appointment')),
                ('mon_open', models.TimeField(null=True, verbose_name='Opens on Monday', blank=True)),
                ('mon_break_close', models.TimeField(null=True, verbose_name='Break Starts on Monday', blank=True)),
                ('mon_break_open', models.TimeField(null=True, verbose_name='Break Ends on Monday', blank=True)),
                ('mon_close', models.TimeField(null=True, verbose_name='Closes on Monday', blank=True)),
                ('tue_open', models.TimeField(null=True, verbose_name='Opens on Tuesday', blank=True)),
                ('tue_break_close', models.TimeField(null=True, verbose_name='Break Starts on Tuesday', blank=True)),
                ('tue_break_open', models.TimeField(null=True, verbose_name='Break Ends on Tuesday', blank=True)),
                ('tue_close', models.TimeField(null=True, verbose_name='Closes on Tuesday', blank=True)),
                ('wed_open', models.TimeField(null=True, verbose_name='Opens on Wednesday', blank=True)),
                ('wed_break_close', models.TimeField(null=True, verbose_name='Break Starts on Wednesday', blank=True)),
                ('wed_break_open', models.TimeField(null=True, verbose_name='Break Ends on Wednesday', blank=True)),
                ('wed_close', models.TimeField(null=True, verbose_name='Closes on Wednesday', blank=True)),
                ('thu_open', models.TimeField(null=True, verbose_name='Opens on Thursday', blank=True)),
                ('thu_break_close', models.TimeField(null=True, verbose_name='Break Starts on Thursday', blank=True)),
                ('thu_break_open', models.TimeField(null=True, verbose_name='Break Ends on Thursday', blank=True)),
                ('thu_close', models.TimeField(null=True, verbose_name='Closes on Thursday', blank=True)),
                ('fri_open', models.TimeField(null=True, verbose_name='Opens on Friday', blank=True)),
                ('fri_break_close', models.TimeField(null=True, verbose_name='Break Starts on Friday', blank=True)),
                ('fri_break_open', models.TimeField(null=True, verbose_name='Break Ends on Friday', blank=True)),
                ('fri_close', models.TimeField(null=True, verbose_name='Closes on Friday', blank=True)),
                ('sat_open', models.TimeField(null=True, verbose_name='Opens on Saturday', blank=True)),
                ('sat_break_close', models.TimeField(null=True, verbose_name='Break Starts on Saturday', blank=True)),
                ('sat_break_open', models.TimeField(null=True, verbose_name='Break Ends on Saturday', blank=True)),
                ('sat_close', models.TimeField(null=True, verbose_name='Closes on Saturday', blank=True)),
                ('sun_open', models.TimeField(null=True, verbose_name='Opens on Sunday', blank=True)),
                ('sun_break_close', models.TimeField(null=True, verbose_name='Break Starts on Sunday', blank=True)),
                ('sun_break_open', models.TimeField(null=True, verbose_name='Break Ends on Sunday', blank=True)),
                ('sun_close', models.TimeField(null=True, verbose_name='Closes on Sunday', blank=True)),
                ('exceptions', models.TextField(default=b'', verbose_name='Exceptions for working hours', null=True, editable=False, blank=True)),
                ('title', models.CharField(verbose_name='Season title', max_length=255, null=True, editable=False)),
                ('start', models.DateField(verbose_name='Start')),
                ('end', models.DateField(verbose_name='End')),
                ('last_entry', models.CharField(verbose_name='Last entry', max_length=255, null=True, editable=False, blank=True)),
                ('title_de', models.CharField(max_length=255, verbose_name='Season title')),
                ('title_en', models.CharField(max_length=255, verbose_name='Season title', blank=True)),
                ('title_fr', models.CharField(max_length=255, verbose_name='Season title', blank=True)),
                ('title_pl', models.CharField(max_length=255, verbose_name='Season title', blank=True)),
                ('title_tr', models.CharField(max_length=255, verbose_name='Season title', blank=True)),
                ('title_es', models.CharField(max_length=255, verbose_name='Season title', blank=True)),
                ('title_it', models.CharField(max_length=255, verbose_name='Season title', blank=True)),
                ('last_entry_de', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_en', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_fr', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_pl', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_tr', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_es', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('last_entry_it', models.CharField(max_length=255, verbose_name='Last entry', blank=True)),
                ('exceptions_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('exceptions_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Exceptions for working hours', blank=True)),
                ('exceptions_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('museum', models.ForeignKey(to='museumssummer.Location')),
            ],
            options={
                'ordering': ('start',),
                'verbose_name': 'Season',
                'verbose_name_plural': 'Seasons',
            },
        ),
    ]
