# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import filebrowser.fields
import django.db.models.deletion
from django.conf import settings
import base_libs.models.fields
import tagging_autocomplete.models


class Migration(migrations.Migration):

    dependencies = [
        ('exhibitions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('museums', '0001_initial'),
        ('i18n', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('creation_date', models.DateTimeField(verbose_name='creation date', editable=False)),
                ('modified_date', models.DateTimeField(verbose_name='modified date', null=True, editable=False)),
                ('path', filebrowser.fields.FileBrowseField(help_text='A path to a locally stored image, video, or audio file.', max_length=500, verbose_name='File path')),
                ('sort_order', base_libs.models.fields.PositionField(default=None, verbose_name='Sort order')),
            ],
            options={
                'ordering': ['sort_order', 'creation_date'],
                'verbose_name': 'Media File',
                'verbose_name_plural': 'Media Files',
            },
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('organizer_title', models.CharField(max_length=255, verbose_name='Other Organizer', blank=True)),
                ('organizer_url_link', base_libs.models.fields.URLField(verbose_name='Organizer URL', blank=True)),
                ('organizing_museum', models.ForeignKey(related_name='workshop_organizer', verbose_name='Organizing museum', blank=True, to='museums.Museum', null=True)),
            ],
            options={
                'ordering': ('organizing_museum__title', 'organizer_title'),
                'verbose_name': 'Organizer',
                'verbose_name_plural': 'Organizers',
            },
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('creation_date', models.DateTimeField(verbose_name='creation date', editable=False)),
                ('modified_date', models.DateTimeField(verbose_name='modified date', null=True, editable=False)),
                ('slug', models.SlugField(unique=True, max_length=255, verbose_name='Slug for URIs')),
                ('title', models.CharField(verbose_name='Title', max_length=255, null=True, editable=False)),
                ('subtitle', models.CharField(verbose_name='Subtitle', max_length=255, null=True, editable=False, blank=True)),
                ('workshop_type', models.CharField(verbose_name='Type', max_length=255, null=True, editable=False, blank=True)),
                ('description', models.TextField(default=b'', verbose_name='Description', null=True, editable=False, blank=True)),
                ('press_text', models.TextField(default=b'', verbose_name='Press text', null=True, editable=False, blank=True)),
                ('website', models.CharField(verbose_name='Website', max_length=255, null=True, editable=False, blank=True)),
                ('image', filebrowser.fields.FileBrowseField(verbose_name='Image', max_length=200, editable=False, blank=True)),
                ('description_locked', models.BooleanField(help_text="When checked, press text won't be copied automatically to description.", verbose_name='Description locked')),
                ('pdf_document_de', filebrowser.fields.FileBrowseField(max_length=255, verbose_name='PDF Document in German', blank=True)),
                ('pdf_document_en', filebrowser.fields.FileBrowseField(max_length=255, verbose_name='PDF Document in English', blank=True)),
                ('status', models.CharField(default=b'draft', max_length=20, verbose_name='Status', blank=True, choices=[(b'draft', 'Draft'), (b'published', 'Published'), (b'not_listed', 'Not Listed'), (b'import', 'Imported'), (b'expired', 'Expired'), (b'trashed', 'Trashed')])),
                ('tags', tagging_autocomplete.models.TagAutocompleteField(default=b'', help_text='Separate different tags by comma', max_length=255, verbose_name='tags', blank=True)),
                ('other_languages', models.CharField(max_length=255, verbose_name='Other languages', blank=True)),
                ('has_group_offer', models.BooleanField(verbose_name='Has bookable group offer')),
                ('is_for_preschool', models.BooleanField(verbose_name='Special for preschool children (up to 5 years)')),
                ('is_for_primary_school', models.BooleanField(verbose_name='Special for children of primary school age (6-12 years)')),
                ('is_for_youth', models.BooleanField(verbose_name='Special for youth (aged 13 years)')),
                ('is_for_families', models.BooleanField(verbose_name='Special for families')),
                ('is_for_wheelchaired', models.BooleanField(verbose_name='Special for people in wheelchairs')),
                ('is_for_deaf', models.BooleanField(verbose_name='Special for deaf people')),
                ('is_for_blind', models.BooleanField(verbose_name='Special for blind people')),
                ('is_for_learning_difficulties', models.BooleanField(verbose_name='Special for people with learning difficulties')),
                ('is_for_dementia_sufferers', models.BooleanField(verbose_name='Special for sufferers of dementia')),
                ('location_name', models.CharField(max_length=255, verbose_name='Location name', blank=True)),
                ('street_address', models.CharField(max_length=255, verbose_name='Street address', blank=True)),
                ('street_address2', models.CharField(max_length=255, verbose_name='Street address (second line)', blank=True)),
                ('postal_code', models.CharField(max_length=255, verbose_name='Postal code', blank=True)),
                ('city', models.CharField(default=b'Berlin', max_length=255, verbose_name='City', blank=True)),
                ('country', models.CharField(default=b'de', max_length=255, verbose_name='Country', blank=True, choices=[(b'de', 'Germany'), (b'-', b'Other')])),
                ('latitude', models.FloatField(help_text='Latitude (Lat.) is the angle between any point and the equator (north pole is at 90; south pole is at -90).', null=True, verbose_name='Latitude', blank=True)),
                ('longitude', models.FloatField(help_text='Longitude (Long.) is the angle east or west of an arbitrary point on Earth from Greenwich (UK), which is the international zero-longitude point (longitude=0 degrees). The anti-meridian of Greenwich is both 180 (direction to east) and -180 (direction to west).', null=True, verbose_name='Longitude', blank=True)),
                ('free_admission', models.BooleanField(verbose_name='Free admission')),
                ('meeting_place', models.CharField(verbose_name='Meeting place', max_length=255, null=True, editable=False, blank=True)),
                ('admission_price', models.DecimalField(null=True, verbose_name='Admission price (\u20ac)', max_digits=5, decimal_places=2, blank=True)),
                ('admission_price_info', models.TextField(default=b'', verbose_name='Admission price info', null=True, editable=False, blank=True)),
                ('reduced_price', models.DecimalField(null=True, verbose_name='Reduced admission price (\u20ac)', max_digits=5, decimal_places=2, blank=True)),
                ('booking_info', models.TextField(default=b'', verbose_name='Booking info', null=True, editable=False, blank=True)),
                ('shop_link', models.CharField(editable=False, max_length=255, blank=True, help_text='A link to an external ticket shop', null=True, verbose_name='Buy ticket')),
                ('closest_workshop_date', models.DateField(verbose_name='Workshop date', null=True, editable=False, blank=True)),
                ('closest_workshop_time', models.TimeField(verbose_name='Workshop start time', null=True, editable=False, blank=True)),
                ('search_keywords', models.TextField(default=b'', verbose_name='Search keywords', null=True, editable=False, blank=True)),
                ('favorites_count', models.PositiveIntegerField(default=0, verbose_name='Favorites count', editable=False)),
                ('workshop_type_de', models.CharField(max_length=255, verbose_name='Type', blank=True)),
                ('workshop_type_en', models.CharField(max_length=255, verbose_name='Type', blank=True)),
                ('workshop_type_fr', models.CharField(max_length=255, verbose_name='Type', blank=True)),
                ('workshop_type_pl', models.CharField(max_length=255, verbose_name='Type', blank=True)),
                ('workshop_type_tr', models.CharField(max_length=255, verbose_name='Type', blank=True)),
                ('workshop_type_es', models.CharField(max_length=255, verbose_name='Type', blank=True)),
                ('workshop_type_it', models.CharField(max_length=255, verbose_name='Type', blank=True)),
                ('subtitle_de', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_en', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_fr', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_pl', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_tr', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_es', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('subtitle_it', models.CharField(max_length=255, verbose_name='Subtitle', blank=True)),
                ('search_keywords_de', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_en', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_fr', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_pl', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_tr', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_es', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('search_keywords_it', base_libs.models.fields.PlainTextModelField(default=b'', null=True, verbose_name='Search keywords', blank=True)),
                ('shop_link_de', models.CharField(help_text='A link to an external ticket shop', max_length=255, verbose_name='Buy ticket', blank=True)),
                ('shop_link_en', models.CharField(help_text='A link to an external ticket shop', max_length=255, verbose_name='Buy ticket', blank=True)),
                ('shop_link_fr', models.CharField(help_text='A link to an external ticket shop', max_length=255, verbose_name='Buy ticket', blank=True)),
                ('shop_link_pl', models.CharField(help_text='A link to an external ticket shop', max_length=255, verbose_name='Buy ticket', blank=True)),
                ('shop_link_tr', models.CharField(help_text='A link to an external ticket shop', max_length=255, verbose_name='Buy ticket', blank=True)),
                ('shop_link_es', models.CharField(help_text='A link to an external ticket shop', max_length=255, verbose_name='Buy ticket', blank=True)),
                ('shop_link_it', models.CharField(help_text='A link to an external ticket shop', max_length=255, verbose_name='Buy ticket', blank=True)),
                ('title_de', models.CharField(max_length=255, verbose_name='Title')),
                ('title_en', models.CharField(max_length=255, verbose_name='Title', blank=True)),
                ('title_fr', models.CharField(max_length=255, verbose_name='Title', blank=True)),
                ('title_pl', models.CharField(max_length=255, verbose_name='Title', blank=True)),
                ('title_tr', models.CharField(max_length=255, verbose_name='Title', blank=True)),
                ('title_es', models.CharField(max_length=255, verbose_name='Title', blank=True)),
                ('title_it', models.CharField(max_length=255, verbose_name='Title', blank=True)),
                ('press_text_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Press text', blank=True)),
                ('press_text_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('press_text_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Press text', blank=True)),
                ('press_text_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('press_text_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Press text', blank=True)),
                ('press_text_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('press_text_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Press text', blank=True)),
                ('press_text_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('press_text_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Press text', blank=True)),
                ('press_text_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('press_text_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Press text', blank=True)),
                ('press_text_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('press_text_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Press text', blank=True)),
                ('press_text_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('website_de', models.CharField(max_length=255, verbose_name='Website', blank=True)),
                ('website_en', models.CharField(max_length=255, verbose_name='Website', blank=True)),
                ('website_fr', models.CharField(max_length=255, verbose_name='Website', blank=True)),
                ('website_pl', models.CharField(max_length=255, verbose_name='Website', blank=True)),
                ('website_tr', models.CharField(max_length=255, verbose_name='Website', blank=True)),
                ('website_es', models.CharField(max_length=255, verbose_name='Website', blank=True)),
                ('website_it', models.CharField(max_length=255, verbose_name='Website', blank=True)),
                ('description_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('description_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Description', blank=True)),
                ('description_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('booking_info_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Booking info', blank=True)),
                ('booking_info_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('booking_info_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Booking info', blank=True)),
                ('booking_info_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('booking_info_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Booking info', blank=True)),
                ('booking_info_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('booking_info_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Booking info', blank=True)),
                ('booking_info_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('booking_info_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Booking info', blank=True)),
                ('booking_info_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('booking_info_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Booking info', blank=True)),
                ('booking_info_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('booking_info_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Booking info', blank=True)),
                ('booking_info_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_de', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_de_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_en', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_en_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_fr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_fr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_pl', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_pl_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_tr', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_tr_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_es', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_es_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('admission_price_info_it', base_libs.models.fields.ExtendedTextField(default=b'', null=True, verbose_name='Admission price info', blank=True)),
                ('admission_price_info_it_markup_type', models.CharField(default=b'pt', help_text='You can select an appropriate markup type here', max_length=10, verbose_name='Markup type', choices=[(b'hw', 'HTML WYSIWYG'), (b'pt', 'Plain Text'), (b'rh', 'Raw HTML'), (b'md', 'Markdown')])),
                ('meeting_place_de', models.CharField(max_length=255, verbose_name='Meeting place', blank=True)),
                ('meeting_place_en', models.CharField(max_length=255, verbose_name='Meeting place', blank=True)),
                ('meeting_place_fr', models.CharField(max_length=255, verbose_name='Meeting place', blank=True)),
                ('meeting_place_pl', models.CharField(max_length=255, verbose_name='Meeting place', blank=True)),
                ('meeting_place_tr', models.CharField(max_length=255, verbose_name='Meeting place', blank=True)),
                ('meeting_place_es', models.CharField(max_length=255, verbose_name='Meeting place', blank=True)),
                ('meeting_place_it', models.CharField(max_length=255, verbose_name='Meeting place', blank=True)),
                ('creator', models.ForeignKey(related_name='workshop_creator', on_delete=django.db.models.deletion.SET_NULL, editable=False, to=settings.AUTH_USER_MODEL, null=True, verbose_name='creator')),
                ('exhibition', models.ForeignKey(verbose_name='Related exhibition', blank=True, to='exhibitions.Exhibition', null=True)),
                ('languages', models.ManyToManyField(to='i18n.Language', verbose_name='Languages', blank=True)),
                ('modifier', models.ForeignKey(related_name='workshop_modifier', on_delete=django.db.models.deletion.SET_NULL, editable=False, to=settings.AUTH_USER_MODEL, null=True, verbose_name='modifier')),
                ('museum', models.ForeignKey(verbose_name='Museum', blank=True, to='museums.Museum', null=True)),
            ],
            options={
                'ordering': ['title', 'creation_date'],
                'verbose_name': 'workshop',
                'verbose_name_plural': 'workshops',
            },
        ),
        migrations.CreateModel(
            name='WorkshopTime',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('workshop_date', models.DateField(verbose_name='Workshop date')),
                ('start', models.TimeField(null=True, verbose_name='Start time', blank=True)),
                ('end', models.TimeField(null=True, verbose_name='End time', blank=True)),
                ('workshop', models.ForeignKey(verbose_name='Workshop', to='workshops.Workshop')),
            ],
            options={
                'ordering': ('workshop_date', 'start'),
                'verbose_name': 'workshop time',
                'verbose_name_plural': 'workshop times',
            },
        ),
        migrations.CreateModel(
            name='WorkshopType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('creation_date', models.DateTimeField(verbose_name='creation date', editable=False)),
                ('modified_date', models.DateTimeField(verbose_name='modified date', null=True, editable=False)),
                ('slug', models.SlugField(unique=True, max_length=255, verbose_name='Slug for URIs')),
                ('title', models.CharField(verbose_name='Title', max_length=200, null=True, editable=False)),
                ('title_de', models.CharField(max_length=200, verbose_name='Title')),
                ('title_en', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_fr', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_pl', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_tr', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_es', models.CharField(max_length=200, verbose_name='Title', blank=True)),
                ('title_it', models.CharField(max_length=200, verbose_name='Title', blank=True)),
            ],
            options={
                'ordering': ['title_de'],
                'verbose_name': 'Type',
                'verbose_name_plural': 'Types',
            },
        ),
        migrations.AddField(
            model_name='workshop',
            name='types',
            field=models.ManyToManyField(to='workshops.WorkshopType', verbose_name='Types'),
        ),
        migrations.AddField(
            model_name='organizer',
            name='workshop',
            field=models.ForeignKey(verbose_name='Workshop', to='workshops.Workshop'),
        ),
        migrations.AddField(
            model_name='mediafile',
            name='workshop',
            field=models.ForeignKey(verbose_name='Workshop', to='workshops.Workshop'),
        ),
    ]
